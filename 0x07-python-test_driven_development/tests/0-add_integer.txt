Text file for ``0-add_integer``
===================================

Using ``add_integer``
----------------------

This module defines an integer addition function ``add_integer(a, b=98)``.
`

>>> add_integer = __import__('0-add_integer').add_integer


Now use it:

    >>> add_integer(2, 3)
    5

    >>> add_integer(2.0, 3.0)
    5

Second value is optional:

    >>> add_integer(2)
    100

works for negative numbers

    >>> add_integer(2.0, -3.0)
    -1

    >>> add_integer(-3.0, -3.0)
    -6

``add_integer()`` expects that both arguments are either integers or floats.
If either argument is a non-integer and non-float, a TypeError is raised:


    >>> add_integer(float('nan'))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer

    >>> add_integer(float('inf'))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer

    >>> add_integer("hello", "there")
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> add_integer(2.0, "string")
    Traceback (most recent call last):
    TypeError: b must be an integer

    >>> add_integer("Hello", 9)
    Traceback (most recent call last):
    TypeError: a must be an integer
